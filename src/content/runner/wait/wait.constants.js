import { pipe, values, without } from 'ramda';

import { WAITING_CONDITION_TYPE } from '~/constants/step';
import { STEP_TYPE } from '~/constants/test';

export const ALWAYS_HARD_WAITING_CONDITIONS = [WAITING_CONDITION_TYPE.ELEMENT_HAS_ATTRIBUTE];

export const STEP_HARD_WAITING_CONDITIONS = {
  [STEP_TYPE.SCROLL]: [WAITING_CONDITION_TYPE.ELEMENT_IS_VISIBLE],
  [STEP_TYPE.CLICK]: [
    WAITING_CONDITION_TYPE.ELEMENT_IS_VISIBLE,
    WAITING_CONDITION_TYPE.ELEMENT_IS_NOT_COVERED,
    WAITING_CONDITION_TYPE.ELEMENT_IS_NOT_DISABLED,
  ],
  [STEP_TYPE.TYPE]: [
    WAITING_CONDITION_TYPE.ELEMENT_IS_VISIBLE,
    WAITING_CONDITION_TYPE.ELEMENT_IS_NOT_COVERED,
    WAITING_CONDITION_TYPE.ELEMENT_IS_NOT_DISABLED,
  ],
  [STEP_TYPE.CLEAR]: [
    WAITING_CONDITION_TYPE.ELEMENT_IS_VISIBLE,
    WAITING_CONDITION_TYPE.ELEMENT_IS_NOT_COVERED,
    WAITING_CONDITION_TYPE.ELEMENT_IS_NOT_DISABLED,
    WAITING_CONDITION_TYPE.ELEMENT_HAS_FOCUS,
  ],
  [STEP_TYPE.HOVER]: [
    WAITING_CONDITION_TYPE.ELEMENT_IS_VISIBLE,
    WAITING_CONDITION_TYPE.ELEMENT_IS_NOT_COVERED,
    WAITING_CONDITION_TYPE.ELEMENT_IS_NOT_DISABLED,
  ],
  [STEP_TYPE.MOUSEDOWN]: [
    WAITING_CONDITION_TYPE.ELEMENT_IS_VISIBLE,
    WAITING_CONDITION_TYPE.ELEMENT_IS_NOT_COVERED,
    WAITING_CONDITION_TYPE.ELEMENT_IS_NOT_DISABLED,
  ],
  [STEP_TYPE.MOUSEUP]: [WAITING_CONDITION_TYPE.ELEMENT_IS_VISIBLE],
  [STEP_TYPE.CHANGE]: [WAITING_CONDITION_TYPE.ELEMENT_IS_NOT_DISABLED],
  [STEP_TYPE.UPLOAD]: [WAITING_CONDITION_TYPE.ELEMENT_IS_NOT_DISABLED],
  [STEP_TYPE.ASSERT]: {
    COMMON: [WAITING_CONDITION_TYPE.ELEMENT_IS_VISIBLE],
  },
};

export const RELATED_WAITING_CONDITIONS = {
  [WAITING_CONDITION_TYPE.DOCUMENT_COMPLETE]: pipe(
    values,
    without([WAITING_CONDITION_TYPE.DOCUMENT_COMPLETE]),
  )(WAITING_CONDITION_TYPE),
  [WAITING_CONDITION_TYPE.ELEMENT_IS_VISIBLE]: [WAITING_CONDITION_TYPE.ELEMENT_IS_NOT_COVERED],
};
